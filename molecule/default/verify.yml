---
- name: Verify
  hosts: all
  gather_facts: true
  vars:
    kubeadm_for_all_users: true
    command_shell: bash
  tasks:
    - name: Set download directory if install only for the user
      ansible.builtin.set_fact:
        kubeadm_download_dir: "{{ ansible_user_dir }}/bin"
      when: not kubeadm_for_all_users | bool

    - name: Set download directory for all users to use
      ansible.builtin.set_fact:
        kubeadm_download_dir: "/usr/local/bin"
      when: kubeadm_for_all_users | bool

    - name: Find the kubeadm file
      ansible.builtin.stat:
        path: "{{ kubeadm_download_dir }}/kubeadm"
      register: kubeadm_file

    - name: Print stat info
      ansible.builtin.debug:
        msg: "{{ kubeadm_file.stat }}"

    - name: Assert that kubeadm exists
      ansible.builtin.assert:
        that: kubeadm_file.stat.exists

    - name: Assert that kubeadm is executable
      ansible.builtin.assert:
        that: kubeadm_file.stat.executable

    - name: Establish the shell profile file if for the user
      ansible.builtin.set_fact:
        profile_file: "{{ ansible_user_dir }}/.{{ command_shell | lower }}rc"
      when: not kubeadm_for_all_users

    - name: Establish the bash profile file if for all users
      ansible.builtin.set_fact:
        profile_file: /etc/profile
      when: kubeadm_for_all_users | bool and command_shell | lower == "bash"

    - name: Establish the zsh profile file if for all users
      ansible.builtin.set_fact:
        profile_file: /etc/zshenv
      when: kubeadm_for_all_users | bool and command_shell | lower == "zsh"

    - name: Find the profile file
      ansible.builtin.stat:
        path: "{{ profile_file }}"
      register: profile_file_reg

    - name: Assert that profile file exists
      ansible.builtin.assert:
        that: profile_file_reg.stat.exists

    - name: Assert that profile file is readable
      ansible.builtin.assert:
        that: profile_file_reg.stat.readable

    - name: Show the profile file
      ansible.builtin.command: cat "{{ profile_file }}"
      register: cat_reg
      no_log: true
      changed_when: false

    - name: Assert that autocompletion is configured
      ansible.builtin.assert:
        that: "'source <(kubeadm completion {{ command_shell | lower }})' in cat_reg.stdout"
